CREATE DATABASE QL_QUANCAFE;

USE QL_QUANCAFE;

CREATE TABLE NHANVIEN (
    MANV VARCHAR(50) PRIMARY KEY,
    TENNV NVARCHAR(100),
    DIACHI NVARCHAR(255),
	NGAYVAOLAM DATE,
    GIOITINH BIT,
    SDT VARCHAR(20),
    MATKHAU NVARCHAR(255)
);

CREATE TABLE LOAIKHACHHANG (
    MALKH VARCHAR(50) PRIMARY KEY,
    TENLKH NVARCHAR(100),
    GIAMGIA INT
);

CREATE TABLE KHACHHANG (
    MAKH VARCHAR(50) PRIMARY KEY,
    MALKH VARCHAR(50),
    TENKH NVARCHAR(100),
    SDT VARCHAR(20),
    DIEMTL INT,
    FOREIGN KEY (MALKH) REFERENCES LOAIKHACHHANG(MALKH)
);

CREATE TABLE LOAIHANGHOA (
    MALH VARCHAR(50) PRIMARY KEY,
    TENLH NVARCHAR(100),
    MOTA NVARCHAR(MAX)
);

CREATE TABLE HANGHOA (
    MAHH VARCHAR(50) PRIMARY KEY,
    MALH VARCHAR(50),
    TENHH NVARCHAR(100),
    HINHANH NVARCHAR(255),
    GIASP DECIMAL(18,2),
    FOREIGN KEY (MALH) REFERENCES LOAIHANGHOA(MALH)
);

CREATE TABLE HOADONBANHANG (
    MAHDBH VARCHAR(50) PRIMARY KEY,
    MANV VARCHAR(50),
    MAKH VARCHAR(50),
    NGAYHDBH DATE,
    TONGTIEN DECIMAL(18,2),
    DIEMTL INT,
    GIAMGIA INT,
    FOREIGN KEY (MANV) REFERENCES NHANVIEN(MANV),
    FOREIGN KEY (MAKH) REFERENCES KHACHHANG(MAKH),
);

CREATE TABLE CHITIETHOADON (
    MACT_HD VARCHAR(50) IDENTITY(1,1) PRIMARY KEY,
    MAHDBH VARCHAR(50),
    MAHH VARCHAR(50),
    SOLUONG INT,
    THANHTIEN DECIMAL(18,2),
    FOREIGN KEY (MAHDBH) REFERENCES HOADONBANHANG(MAHDBH),
    FOREIGN KEY (MAHH) REFERENCES HANGHOA(MAHH)
);

CREATE TABLE MAGIAMGIA (
    MAGIAM VARCHAR(50),
    GIAMGIA INT
);

--Tao user de vao DB
create login QLQuanCafe with password = '123'
create user QLQuanCafe for login QLQuanCafe
create role role_QuanCafe
grant insert, select, update, delete
to role_QuanCafe
exec sp_addrolemember role_QuanCafe, QLQuanCafe;


CREATE TRIGGER TRG_TAO_MANV
ON NHANVIEN
INSTEAD OF INSERT
AS
BEGIN
    DECLARE @MAX_MA VARCHAR(50), @NEXT_NUM INT, @NEW_MA VARCHAR(50);
    DECLARE @TENNV NVARCHAR(100), @DIACHI NVARCHAR(255), @GIOITINH BIT,
            @NGAYVAOLAM DATE, @SDT VARCHAR(20), @MATKHAU NVARCHAR(255);

    -- Lấy dòng cần insert (giả sử mỗi lần chỉ insert 1 dòng)
    SELECT TOP 1
        @TENN
        @DIACHI = DIACHI,
        @GIOITINH = GIOITINH,
        @NGAYVAOLAM = NGAYVAOLAM,
        @SDT = SDT,
        @MATKHAU = MATKHAU
    FROM INSERTED;

    -- Tìm mã lớn nhất hiện có trong bảng
    SELECT @MAX_MA = MAX(MANV) FROM NHANVIEN WHERE MANV LIKE 'NV[0-9][0-9][0-9][0-9]';

    -- Nếu chưa có thì bắt đầu từ 1
    IF @MAX_MA IS NULL
        SET @NEXT_NUM = 1;
    ELSE
        SET @NEXT_NUM = CAST(RIGHT(@MAX_MA, 4) AS INT) + 1;

    -- Tạo mã mới
    SET @NEW_MA = 'NV' + RIGHT('0000' + CAST(@NEXT_NUM AS VARCHAR), 4);

    -- Thêm nhân viên với mã mới
    INSERT INTO NHANVIEN (MANV, TENNV, DIACHI, GIOITINH, NGAYVAOLAM, SDT, MATKHAU)
    VALUES (@NEW_MA, @TENNV, @DIACHI, @GIOITINH, @NGAYVAOLAM, @SDT, @MATKHAU);
END;
GO

CREATE TRIGGER TRG_TAO_MAKH
ON KHACHHANG
INSTEAD OF INSERT
AS
BEGIN
    DECLARE @MAX_MA VARCHAR(50), @NEXT_NUM INT, @NEW_MA VARCHAR(50);
    DECLARE @MALKH VARCHAR(50), @TENKH NVARCHAR(100), @SDT VARCHAR(20), @DIEMTL INT;

    SELECT TOP 1 @MALKH = MALKH, @TENKH = TENKH, @SDT = SDT, @DIEMTL = DIEMTL FROM INSERTED;

    SELECT @MAX_MA = MAX(MAKH) FROM KHACHHANG WHERE MAKH LIKE 'KH[0-9][0-9][0-9][0-9]';

    IF @MAX_MA IS NULL SET @NEXT_NUM = 1;
    ELSE SET @NEXT_NUM = CAST(RIGHT(@MAX_MA, 4) AS INT) + 1;

    SET @NEW_MA = 'KH' + RIGHT('0000' + CAST(@NEXT_NUM AS VARCHAR), 4);

    INSERT INTO KHACHHANG (MAKH, MALKH, TENKH, SDT, DIEMTL)
    VALUES (@NEW_MA, @MALKH, @TENKH, @SDT, @DIEMTL);
END;
GO

CREATE TRIGGER TRG_TAO_MAHH
ON HANGHOA
INSTEAD OF INSERT
AS
BEGIN
    DECLARE @MAX_MA VARCHAR(50), @NEXT_NUM INT, @NEW_MA VARCHAR(50);
    DECLARE @MALH VARCHAR(50), @TENHH NVARCHAR(100), @HINHANH NVARCHAR(255), @GIASP DECIMAL(18,2);

    SELECT TOP 1 @MALH = MALH, @TENHH = TENHH, @HINHANH = HINHANH, @GIASP = GIASP FROM INSERTED;

    SELECT @MAX_MA = MAX(MAHH) FROM HANGHOA WHERE MAHH LIKE 'HH[0-9][0-9][0-9][0-9]';

    IF @MAX_MA IS NULL SET @NEXT_NUM = 1;
    ELSE SET @NEXT_NUM = CAST(RIGHT(@MAX_MA, 4) AS INT) + 1;

    SET @NEW_MA = 'HH' + RIGHT('0000' + CAST(@NEXT_NUM AS VARCHAR), 4);

    INSERT INTO HANGHOA (MAHH, MALH, TENHH, HINHANH, GIASP)
    VALUES (@NEW_MA, @MALH, @TENHH, @HINHANH, @GIASP);
END;
GO

CREATE TRIGGER TRG_TAO_MALKH
ON LOAIKHACHHANG
INSTEAD OF INSERT
AS
BEGIN
    DECLARE @MAX_MA VARCHAR(50), @NEXT_NUM INT, @NEW_MA VARCHAR(50);
    DECLARE @TENLKH NVARCHAR(100), @GIAMGIA INT;

    SELECT TOP 1 @TENLKH = TENLKH, @GIAMGIA = GIAMGIA FROM INSERTED;

    SELECT @MAX_MA = MAX(MALKH) FROM LOAIKHACHHANG WHERE MALKH LIKE 'LKH[0-9][0-9][0-9][0-9]';

    IF @MAX_MA IS NULL SET @NEXT_NUM = 1;
    ELSE SET @NEXT_NUM = CAST(RIGHT(@MAX_MA, 4) AS INT) + 1;

    SET @NEW_MA = 'LKH' + RIGHT('0000' + CAST(@NEXT_NUM AS VARCHAR), 4);

    INSERT INTO LOAIKHACHHANG (MALKH, TENLKH, GIAMGIA)
    VALUES (@NEW_MA, @TENLKH, @GIAMGIA);
END;
GO

CREATE TRIGGER TRG_TAO_MALH
ON LOAIHANGHOA
INSTEAD OF INSERT
AS
BEGIN
    DECLARE @MAX_MA VARCHAR(50), @NEXT_NUM INT, @NEW_MA VARCHAR(50);
    DECLARE @TENLH NVARCHAR(100), @MOTA NVARCHAR(MAX);

    SELECT TOP 1 @TENLH = TENLH, @MOTA = MOTA FROM INSERTED;

    SELECT @MAX_MA = MAX(MALH) FROM LOAIHANGHOA WHERE MALH LIKE 'LH[0-9][0-9][0-9][0-9]';

    IF @MAX_MA IS NULL SET @NEXT_NUM = 1;
    ELSE SET @NEXT_NUM = CAST(RIGHT(@MAX_MA, 4) AS INT) + 1;

    SET @NEW_MA = 'LH' + RIGHT('0000' + CAST(@NEXT_NUM AS VARCHAR), 4);

    INSERT INTO LOAIHANGHOA (MALH, TENLH, MOTA)
    VALUES (@NEW_MA, @TENLH, @MOTA);
END;
GO
